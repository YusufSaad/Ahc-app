// Generated by Dagger (https://google.github.io/dagger).
package com.quran.labs.androidquran.model.bookmark;

import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class BookmarkImportExportModel_Factory implements Factory<BookmarkImportExportModel> {
  private final Provider<Context> appContextProvider;

  private final Provider<BookmarkJsonModel> modelProvider;

  private final Provider<BookmarkModel> bookmarkModelProvider;

  public BookmarkImportExportModel_Factory(
      Provider<Context> appContextProvider,
      Provider<BookmarkJsonModel> modelProvider,
      Provider<BookmarkModel> bookmarkModelProvider) {
    this.appContextProvider = appContextProvider;
    this.modelProvider = modelProvider;
    this.bookmarkModelProvider = bookmarkModelProvider;
  }

  @Override
  public BookmarkImportExportModel get() {
    return new BookmarkImportExportModel(
        appContextProvider.get(), modelProvider.get(), bookmarkModelProvider.get());
  }

  public static BookmarkImportExportModel_Factory create(
      Provider<Context> appContextProvider,
      Provider<BookmarkJsonModel> modelProvider,
      Provider<BookmarkModel> bookmarkModelProvider) {
    return new BookmarkImportExportModel_Factory(
        appContextProvider, modelProvider, bookmarkModelProvider);
  }

  public static BookmarkImportExportModel newBookmarkImportExportModel(
      Context appContext, Object model, BookmarkModel bookmarkModel) {
    return new BookmarkImportExportModel(appContext, (BookmarkJsonModel) model, bookmarkModel);
  }
}
