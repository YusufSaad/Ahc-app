// Generated by Dagger (https://google.github.io/dagger).
package com.quran.labs.androidquran.module.application;

import android.content.Context;
import android.view.Display;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ApplicationModule_ProvideDisplayFactory implements Factory<Display> {
  private final ApplicationModule module;

  private final Provider<Context> appContextProvider;

  public ApplicationModule_ProvideDisplayFactory(
      ApplicationModule module, Provider<Context> appContextProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public Display get() {
    return Preconditions.checkNotNull(
        module.provideDisplay(appContextProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApplicationModule_ProvideDisplayFactory create(
      ApplicationModule module, Provider<Context> appContextProvider) {
    return new ApplicationModule_ProvideDisplayFactory(module, appContextProvider);
  }

  public static Display proxyProvideDisplay(ApplicationModule instance, Context appContext) {
    return Preconditions.checkNotNull(
        instance.provideDisplay(appContext),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
