// Generated by Dagger (https://google.github.io/dagger).
package com.quran.labs.androidquran.module.application;

import android.view.Display;
import com.quran.data.source.DisplaySize;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ApplicationModule_ProvideDisplaySizeFactory implements Factory<DisplaySize> {
  private final ApplicationModule module;

  private final Provider<Display> displayProvider;

  public ApplicationModule_ProvideDisplaySizeFactory(
      ApplicationModule module, Provider<Display> displayProvider) {
    this.module = module;
    this.displayProvider = displayProvider;
  }

  @Override
  public DisplaySize get() {
    return Preconditions.checkNotNull(
        module.provideDisplaySize(displayProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApplicationModule_ProvideDisplaySizeFactory create(
      ApplicationModule module, Provider<Display> displayProvider) {
    return new ApplicationModule_ProvideDisplaySizeFactory(module, displayProvider);
  }

  public static DisplaySize proxyProvideDisplaySize(ApplicationModule instance, Display display) {
    return Preconditions.checkNotNull(
        instance.provideDisplaySize(display),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
