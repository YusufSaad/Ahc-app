// Generated by Dagger (https://google.github.io/dagger).
package com.quran.labs.androidquran.module.application;

import android.content.Context;
import com.quran.labs.androidquran.data.QuranInfo;
import com.quran.labs.androidquran.database.BookmarksDBAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DatabaseModule_ProvideBookmarkDatabaseAdapterFactory
    implements Factory<BookmarksDBAdapter> {
  private final Provider<Context> contextProvider;

  private final Provider<QuranInfo> quranInfoProvider;

  public DatabaseModule_ProvideBookmarkDatabaseAdapterFactory(
      Provider<Context> contextProvider, Provider<QuranInfo> quranInfoProvider) {
    this.contextProvider = contextProvider;
    this.quranInfoProvider = quranInfoProvider;
  }

  @Override
  public BookmarksDBAdapter get() {
    return Preconditions.checkNotNull(
        DatabaseModule.provideBookmarkDatabaseAdapter(
            contextProvider.get(), quranInfoProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static DatabaseModule_ProvideBookmarkDatabaseAdapterFactory create(
      Provider<Context> contextProvider, Provider<QuranInfo> quranInfoProvider) {
    return new DatabaseModule_ProvideBookmarkDatabaseAdapterFactory(
        contextProvider, quranInfoProvider);
  }

  public static BookmarksDBAdapter proxyProvideBookmarkDatabaseAdapter(
      Context context, QuranInfo quranInfo) {
    return Preconditions.checkNotNull(
        DatabaseModule.provideBookmarkDatabaseAdapter(context, quranInfo),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
